group 'xref'
version '1.0-RC1'

buildscript {
    ext.api_version = '1.0'
    ext.kotlin_version = '1.1.3-2'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.ajoberstar:gradle-git-publish:0.3.0'
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.15'
    }
}

apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.ajoberstar.git-publish'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    testCompile 'io.kotlintest:kotlintest:2.0.5'
}

compileKotlin {
    kotlinOptions {
        jvmTarget= "1.8"
    }
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/internal/**'])
        })
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.kotlin.srcDirs
    classifier = 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/dokkaJavadoc"
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

gitPublish {
    repoUri = 'git@github.com:jcornaz/xref.git'
    branch = 'gh-pages'

    contents {
        from dokka
        into "doc/$api_version"
    }

    commitMessage = 'Update documentation'
}

check.dependsOn jacocoTestReport
